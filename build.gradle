plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.cinema'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group = 'com.cinema'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = '21'

    ext {
        set('springCloudVersion', "2023.0.1")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.amqp:spring-amqp:3.1.4'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.0'
        implementation 'org.liquibase:liquibase-core:4.27.0'
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation 'org.springframework.amqp:spring-rabbit-test'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

bootJar {
    mainClass = 'com.cinema.service.ServiceApplication'
    launchScript {
        properties 'spring.profiles.active': 'prod'
    }
    enabled = false
}
